name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REACT_APP_API_GATEWAY_URL: ${{ secrets.REACT_APP_API_GATEWAY_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' 

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          set BUILD_PATH=..\\cdk\\resources\\build
          npx react-scripts build

      - name: Install backend dependencies
        run: |
          cd cdk
          npm install

      - name: Synthesize CDK
        run: |
          cd cdk
          set FRONTEND_STACK_EXPORTS_AVAILABLE=false
          npx cdk synth

      - name: Deploy BackendStack
        run: |
          cd cdk
          npx cdk deploy BackendStack --require-approval never

      - name: Get API Gateway URL
        id: get-url
        run: echo "::set-output name=url::$(aws cloudformation describe-stacks --stack-name BackendStack --query "Stacks[0].Outputs[?OutputKey=='ApiGateway'].OutputValue" --output text)"

      - name: Set API Gateway URL
        run: |
          echo "REACT_APP_API_GATEWAY_URL=${{ steps.get-url.outputs.url }}" >> frontend/.env

      - name: Deploy FrontendStack
        run: |
          cd cdk
          npx cdk deploy FrontendStack --require-approval never

      - name: Deploy BackendStack with exports available
        run: |
          cd cdk
          set FRONTEND_STACK_EXPORTS_AVAILABLE=true
          npx cdk deploy BackendStack --require-approval never
